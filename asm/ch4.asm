
Challenge4:     file format elf32-i386


Disassembly of section .init:

08049000 <_init>:
 8049000:	53                   	push   ebx
 8049001:	83 ec 08             	sub    esp,0x8
 8049004:	e8 c7 00 00 00       	call   80490d0 <__x86.get_pc_thunk.bx>
 8049009:	81 c3 f7 2f 00 00    	add    ebx,0x2ff7
 804900f:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8049015:	85 c0                	test   eax,eax
 8049017:	74 02                	je     804901b <_init+0x1b>
 8049019:	ff d0                	call   eax
 804901b:	83 c4 08             	add    esp,0x8
 804901e:	5b                   	pop    ebx
 804901f:	c3                   	ret    

Disassembly of section .plt:

08049020 <.plt>:
 8049020:	ff 35 04 c0 04 08    	push   DWORD PTR ds:0x804c004
 8049026:	ff 25 08 c0 04 08    	jmp    DWORD PTR ds:0x804c008
 804902c:	00 00                	add    BYTE PTR [eax],al
	...

08049030 <gets@plt>:
 8049030:	ff 25 0c c0 04 08    	jmp    DWORD PTR ds:0x804c00c
 8049036:	68 00 00 00 00       	push   0x0
 804903b:	e9 e0 ff ff ff       	jmp    8049020 <.plt>

08049040 <execvp@plt>:
 8049040:	ff 25 10 c0 04 08    	jmp    DWORD PTR ds:0x804c010
 8049046:	68 08 00 00 00       	push   0x8
 804904b:	e9 d0 ff ff ff       	jmp    8049020 <.plt>

08049050 <malloc@plt>:
 8049050:	ff 25 14 c0 04 08    	jmp    DWORD PTR ds:0x804c014
 8049056:	68 10 00 00 00       	push   0x10
 804905b:	e9 c0 ff ff ff       	jmp    8049020 <.plt>

08049060 <puts@plt>:
 8049060:	ff 25 18 c0 04 08    	jmp    DWORD PTR ds:0x804c018
 8049066:	68 18 00 00 00       	push   0x18
 804906b:	e9 b0 ff ff ff       	jmp    8049020 <.plt>

08049070 <__libc_start_main@plt>:
 8049070:	ff 25 1c c0 04 08    	jmp    DWORD PTR ds:0x804c01c
 8049076:	68 20 00 00 00       	push   0x20
 804907b:	e9 a0 ff ff ff       	jmp    8049020 <.plt>

Disassembly of section .text:

08049080 <_start>:
 8049080:	31 ed                	xor    ebp,ebp
 8049082:	5e                   	pop    esi
 8049083:	89 e1                	mov    ecx,esp
 8049085:	83 e4 f0             	and    esp,0xfffffff0
 8049088:	50                   	push   eax
 8049089:	54                   	push   esp
 804908a:	52                   	push   edx
 804908b:	e8 23 00 00 00       	call   80490b3 <_start+0x33>
 8049090:	81 c3 70 2f 00 00    	add    ebx,0x2f70
 8049096:	8d 83 e0 d2 ff ff    	lea    eax,[ebx-0x2d20]
 804909c:	50                   	push   eax
 804909d:	8d 83 80 d2 ff ff    	lea    eax,[ebx-0x2d80]
 80490a3:	50                   	push   eax
 80490a4:	51                   	push   ecx
 80490a5:	56                   	push   esi
 80490a6:	c7 c0 02 92 04 08    	mov    eax,0x8049202
 80490ac:	50                   	push   eax
 80490ad:	e8 be ff ff ff       	call   8049070 <__libc_start_main@plt>
 80490b2:	f4                   	hlt    
 80490b3:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80490b6:	c3                   	ret    
 80490b7:	66 90                	xchg   ax,ax
 80490b9:	66 90                	xchg   ax,ax
 80490bb:	66 90                	xchg   ax,ax
 80490bd:	66 90                	xchg   ax,ax
 80490bf:	90                   	nop

080490c0 <_dl_relocate_static_pie>:
 80490c0:	c3                   	ret    
 80490c1:	66 90                	xchg   ax,ax
 80490c3:	66 90                	xchg   ax,ax
 80490c5:	66 90                	xchg   ax,ax
 80490c7:	66 90                	xchg   ax,ax
 80490c9:	66 90                	xchg   ax,ax
 80490cb:	66 90                	xchg   ax,ax
 80490cd:	66 90                	xchg   ax,ax
 80490cf:	90                   	nop

080490d0 <__x86.get_pc_thunk.bx>:
 80490d0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80490d3:	c3                   	ret    
 80490d4:	66 90                	xchg   ax,ax
 80490d6:	66 90                	xchg   ax,ax
 80490d8:	66 90                	xchg   ax,ax
 80490da:	66 90                	xchg   ax,ax
 80490dc:	66 90                	xchg   ax,ax
 80490de:	66 90                	xchg   ax,ax

080490e0 <deregister_tm_clones>:
 80490e0:	b8 28 c0 04 08       	mov    eax,0x804c028
 80490e5:	3d 28 c0 04 08       	cmp    eax,0x804c028
 80490ea:	74 24                	je     8049110 <deregister_tm_clones+0x30>
 80490ec:	b8 00 00 00 00       	mov    eax,0x0
 80490f1:	85 c0                	test   eax,eax
 80490f3:	74 1b                	je     8049110 <deregister_tm_clones+0x30>
 80490f5:	55                   	push   ebp
 80490f6:	89 e5                	mov    ebp,esp
 80490f8:	83 ec 14             	sub    esp,0x14
 80490fb:	68 28 c0 04 08       	push   0x804c028
 8049100:	ff d0                	call   eax
 8049102:	83 c4 10             	add    esp,0x10
 8049105:	c9                   	leave  
 8049106:	c3                   	ret    
 8049107:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 804910e:	66 90                	xchg   ax,ax
 8049110:	c3                   	ret    
 8049111:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8049118:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 804911f:	90                   	nop

08049120 <register_tm_clones>:
 8049120:	b8 28 c0 04 08       	mov    eax,0x804c028
 8049125:	2d 28 c0 04 08       	sub    eax,0x804c028
 804912a:	89 c2                	mov    edx,eax
 804912c:	c1 e8 1f             	shr    eax,0x1f
 804912f:	c1 fa 02             	sar    edx,0x2
 8049132:	01 d0                	add    eax,edx
 8049134:	d1 f8                	sar    eax,1
 8049136:	74 20                	je     8049158 <register_tm_clones+0x38>
 8049138:	ba 00 00 00 00       	mov    edx,0x0
 804913d:	85 d2                	test   edx,edx
 804913f:	74 17                	je     8049158 <register_tm_clones+0x38>
 8049141:	55                   	push   ebp
 8049142:	89 e5                	mov    ebp,esp
 8049144:	83 ec 10             	sub    esp,0x10
 8049147:	50                   	push   eax
 8049148:	68 28 c0 04 08       	push   0x804c028
 804914d:	ff d2                	call   edx
 804914f:	83 c4 10             	add    esp,0x10
 8049152:	c9                   	leave  
 8049153:	c3                   	ret    
 8049154:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8049158:	c3                   	ret    
 8049159:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

08049160 <__do_global_dtors_aux>:
 8049160:	80 3d 28 c0 04 08 00 	cmp    BYTE PTR ds:0x804c028,0x0
 8049167:	75 17                	jne    8049180 <__do_global_dtors_aux+0x20>
 8049169:	55                   	push   ebp
 804916a:	89 e5                	mov    ebp,esp
 804916c:	83 ec 08             	sub    esp,0x8
 804916f:	e8 6c ff ff ff       	call   80490e0 <deregister_tm_clones>
 8049174:	c6 05 28 c0 04 08 01 	mov    BYTE PTR ds:0x804c028,0x1
 804917b:	c9                   	leave  
 804917c:	c3                   	ret    
 804917d:	8d 76 00             	lea    esi,[esi+0x0]
 8049180:	c3                   	ret    
 8049181:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8049188:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 804918f:	90                   	nop

08049190 <frame_dummy>:
 8049190:	eb 8e                	jmp    8049120 <register_tm_clones>

08049192 <hacked>:
 8049192:	55                   	push   ebp
 8049193:	89 e5                	mov    ebp,esp
 8049195:	53                   	push   ebx
 8049196:	83 ec 14             	sub    esp,0x14
 8049199:	e8 de 00 00 00       	call   804927c <__x86.get_pc_thunk.ax>
 804919e:	05 62 2e 00 00       	add    eax,0x2e62
 80491a3:	8d 90 08 e0 ff ff    	lea    edx,[eax-0x1ff8]
 80491a9:	89 55 ec             	mov    DWORD PTR [ebp-0x14],edx
 80491ac:	8d 90 11 e0 ff ff    	lea    edx,[eax-0x1fef]
 80491b2:	89 55 f0             	mov    DWORD PTR [ebp-0x10],edx
 80491b5:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
 80491bc:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
 80491bf:	83 ec 08             	sub    esp,0x8
 80491c2:	8d 4d ec             	lea    ecx,[ebp-0x14]
 80491c5:	51                   	push   ecx
 80491c6:	52                   	push   edx
 80491c7:	89 c3                	mov    ebx,eax
 80491c9:	e8 72 fe ff ff       	call   8049040 <execvp@plt>
 80491ce:	83 c4 10             	add    esp,0x10
 80491d1:	90                   	nop
 80491d2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 80491d5:	c9                   	leave  
 80491d6:	c3                   	ret    

080491d7 <loser>:
 80491d7:	55                   	push   ebp
 80491d8:	89 e5                	mov    ebp,esp
 80491da:	53                   	push   ebx
 80491db:	83 ec 04             	sub    esp,0x4
 80491de:	e8 99 00 00 00       	call   804927c <__x86.get_pc_thunk.ax>
 80491e3:	05 1d 2e 00 00       	add    eax,0x2e1d
 80491e8:	83 ec 0c             	sub    esp,0xc
 80491eb:	8d 90 20 e0 ff ff    	lea    edx,[eax-0x1fe0]
 80491f1:	52                   	push   edx
 80491f2:	89 c3                	mov    ebx,eax
 80491f4:	e8 67 fe ff ff       	call   8049060 <puts@plt>
 80491f9:	83 c4 10             	add    esp,0x10
 80491fc:	90                   	nop
 80491fd:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 8049200:	c9                   	leave  
 8049201:	c3                   	ret    

08049202 <main>:
 8049202:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 8049206:	83 e4 f0             	and    esp,0xfffffff0
 8049209:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 804920c:	55                   	push   ebp
 804920d:	89 e5                	mov    ebp,esp
 804920f:	53                   	push   ebx
 8049210:	51                   	push   ecx
 8049211:	83 ec 10             	sub    esp,0x10
 8049214:	e8 b7 fe ff ff       	call   80490d0 <__x86.get_pc_thunk.bx>
 8049219:	81 c3 e7 2d 00 00    	add    ebx,0x2de7
 804921f:	83 ec 0c             	sub    esp,0xc
 8049222:	6a 0a                	push   0xa
 8049224:	e8 27 fe ff ff       	call   8049050 <malloc@plt>
 8049229:	83 c4 10             	add    esp,0x10
 804922c:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 804922f:	83 ec 0c             	sub    esp,0xc
 8049232:	6a 04                	push   0x4
 8049234:	e8 17 fe ff ff       	call   8049050 <malloc@plt>
 8049239:	83 c4 10             	add    esp,0x10
 804923c:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
 804923f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
 8049242:	8d 93 d7 d1 ff ff    	lea    edx,[ebx-0x2e29]
 8049248:	89 10                	mov    DWORD PTR [eax],edx
 804924a:	83 ec 0c             	sub    esp,0xc
 804924d:	8d 83 27 e0 ff ff    	lea    eax,[ebx-0x1fd9]
 8049253:	50                   	push   eax
 8049254:	e8 07 fe ff ff       	call   8049060 <puts@plt>
 8049259:	83 c4 10             	add    esp,0x10
 804925c:	83 ec 0c             	sub    esp,0xc
 804925f:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
 8049262:	e8 c9 fd ff ff       	call   8049030 <gets@plt>
 8049267:	83 c4 10             	add    esp,0x10
 804926a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
 804926d:	8b 00                	mov    eax,DWORD PTR [eax]
 804926f:	ff d0                	call   eax
 8049271:	90                   	nop
 8049272:	8d 65 f8             	lea    esp,[ebp-0x8]
 8049275:	59                   	pop    ecx
 8049276:	5b                   	pop    ebx
 8049277:	5d                   	pop    ebp
 8049278:	8d 61 fc             	lea    esp,[ecx-0x4]
 804927b:	c3                   	ret    

0804927c <__x86.get_pc_thunk.ax>:
 804927c:	8b 04 24             	mov    eax,DWORD PTR [esp]
 804927f:	c3                   	ret    

08049280 <__libc_csu_init>:
 8049280:	55                   	push   ebp
 8049281:	e8 5b 00 00 00       	call   80492e1 <__x86.get_pc_thunk.bp>
 8049286:	81 c5 7a 2d 00 00    	add    ebp,0x2d7a
 804928c:	57                   	push   edi
 804928d:	56                   	push   esi
 804928e:	53                   	push   ebx
 804928f:	83 ec 0c             	sub    esp,0xc
 8049292:	89 eb                	mov    ebx,ebp
 8049294:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
 8049298:	e8 63 fd ff ff       	call   8049000 <_init>
 804929d:	8d 9d 10 ff ff ff    	lea    ebx,[ebp-0xf0]
 80492a3:	8d 85 0c ff ff ff    	lea    eax,[ebp-0xf4]
 80492a9:	29 c3                	sub    ebx,eax
 80492ab:	c1 fb 02             	sar    ebx,0x2
 80492ae:	74 25                	je     80492d5 <__libc_csu_init+0x55>
 80492b0:	31 f6                	xor    esi,esi
 80492b2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80492b8:	83 ec 04             	sub    esp,0x4
 80492bb:	57                   	push   edi
 80492bc:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80492c0:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80492c4:	ff 94 b5 0c ff ff ff 	call   DWORD PTR [ebp+esi*4-0xf4]
 80492cb:	83 c6 01             	add    esi,0x1
 80492ce:	83 c4 10             	add    esp,0x10
 80492d1:	39 f3                	cmp    ebx,esi
 80492d3:	75 e3                	jne    80492b8 <__libc_csu_init+0x38>
 80492d5:	83 c4 0c             	add    esp,0xc
 80492d8:	5b                   	pop    ebx
 80492d9:	5e                   	pop    esi
 80492da:	5f                   	pop    edi
 80492db:	5d                   	pop    ebp
 80492dc:	c3                   	ret    
 80492dd:	8d 76 00             	lea    esi,[esi+0x0]

080492e0 <__libc_csu_fini>:
 80492e0:	c3                   	ret    

080492e1 <__x86.get_pc_thunk.bp>:
 80492e1:	8b 2c 24             	mov    ebp,DWORD PTR [esp]
 80492e4:	c3                   	ret    

Disassembly of section .fini:

080492e8 <_fini>:
 80492e8:	53                   	push   ebx
 80492e9:	83 ec 08             	sub    esp,0x8
 80492ec:	e8 df fd ff ff       	call   80490d0 <__x86.get_pc_thunk.bx>
 80492f1:	81 c3 0f 2d 00 00    	add    ebx,0x2d0f
 80492f7:	83 c4 08             	add    esp,0x8
 80492fa:	5b                   	pop    ebx
 80492fb:	c3                   	ret    
